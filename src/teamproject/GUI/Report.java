/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teamproject.GUI;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;
import teamproject.Databases.DB_ImplClass;

/**
 *
 * @author ahmetsesli
 */
public class Report extends javax.swing.JPanel {
    private String username;
    private ResultSet rs;
    Statement statement;
    Connection connection = null;
    DB_ImplClass db = new DB_ImplClass();
    String selected;
    
    /**
     * Creates new form NewJPanel
     */
    public Report(String username) {
        this.username = username;
        initComponents();
        JFrame frame = new JFrame();
        frame.add(this);
        frame.pack();
        
        this.textFieldUserDetails.setText(username);
        connection = db.connect();
        statement = db.getStatement();

        SetPanel();
        
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private void SetPanel(){
        selected = comboBoxReportType.getSelectedItem().toString();
        if (selected.equals("Monthly vehicle report")){
            jLayeredPane.removeAll();
            jLayeredPane.add(monthlyVehiclePanel);
            jLayeredPane.repaint();
            jLayeredPane.revalidate();            
        }else if (selected.equals("Average job time and price")){
            jLayeredPane.removeAll();
            jLayeredPane.add(jobTypePanel);
            jLayeredPane.repaint();
            jLayeredPane.revalidate();
        }else if (selected.equals("Stock control")){
            jLayeredPane.removeAll();
            jLayeredPane.repaint();
            jLayeredPane.revalidate();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelReports = new javax.swing.JLabel();
        buttonPrint = new javax.swing.JButton();
        buttonView = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaReport = new javax.swing.JTextArea();
        buttonExit = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        textFieldUserDetails = new javax.swing.JTextField();
        labelLoggedIn1 = new javax.swing.JLabel();
        textFieldTill = new javax.swing.JTextField();
        labelTill = new javax.swing.JLabel();
        textFieldFrom = new javax.swing.JTextField();
        labelFrom = new javax.swing.JLabel();
        labelPeriod = new javax.swing.JLabel();
        labelSelectType = new javax.swing.JLabel();
        comboBoxReportType = new javax.swing.JComboBox<>();
        jLayeredPane = new javax.swing.JLayeredPane();
        jobTypePanel = new javax.swing.JPanel();
        labelCustomerType = new javax.swing.JLabel();
        comboBoxMechanic = new javax.swing.JComboBox<>();
        labelJobType1 = new javax.swing.JLabel();
        comboBoxJobTypeJob = new javax.swing.JComboBox<>();
        monthlyVehiclePanel = new javax.swing.JPanel();
        labelCustomerType1 = new javax.swing.JLabel();
        comboBoxCustomerType = new javax.swing.JComboBox<>();
        labelJobType2 = new javax.swing.JLabel();
        comboBoxJobTypeVehicle = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(1280, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelReports.setFont(new java.awt.Font("Lucida Grande", 1, 72)); // NOI18N
        labelReports.setText("Reports");
        add(labelReports, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, -1, -1));

        buttonPrint.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        buttonPrint.setText("Print");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });
        add(buttonPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 620, -1, -1));

        buttonView.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        buttonView.setText("View");
        buttonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewActionPerformed(evt);
            }
        });
        add(buttonView, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 620, -1, -1));

        textAreaReport.setColumns(20);
        textAreaReport.setRows(5);
        jScrollPane1.setViewportView(textAreaReport);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 1180, 400));

        buttonExit.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });
        add(buttonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 0, -1, -1));

        buttonBack.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));
        add(textFieldUserDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 220, 30));

        labelLoggedIn1.setText("Logged In as:");
        add(labelLoggedIn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, -1, -1));
        add(textFieldTill, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 190, 100, 30));

        labelTill.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelTill.setText("Till");
        add(labelTill, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 200, -1, -1));
        add(textFieldFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 190, 100, 30));

        labelFrom.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelFrom.setText("From");
        add(labelFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 200, -1, -1));

        labelPeriod.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelPeriod.setText("Period(dd/mm/yyyy):");
        add(labelPeriod, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 160, -1, -1));

        labelSelectType.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelSelectType.setText("Select Type of Report:");
        add(labelSelectType, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        comboBoxReportType.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        comboBoxReportType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monthly vehicle report", "Average job time and price", "Stock control" }));
        comboBoxReportType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxReportTypeActionPerformed(evt);
            }
        });
        add(comboBoxReportType, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, -1, 30));

        labelCustomerType.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelCustomerType.setText("Select mechanic: ");
        jobTypePanel.add(labelCustomerType);

        comboBoxMechanic.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        comboBoxMechanic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        jobTypePanel.add(comboBoxMechanic);

        labelJobType1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelJobType1.setText("Job Type:");
        jobTypePanel.add(labelJobType1);

        comboBoxJobTypeJob.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        comboBoxJobTypeJob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Overall", "MoT", "Service", "Repair" }));
        jobTypePanel.add(comboBoxJobTypeJob);

        jLayeredPane.add(jobTypePanel);
        jobTypePanel.setBounds(80, 90, 370, 80);

        labelCustomerType1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelCustomerType1.setText("Customer Type:");
        monthlyVehiclePanel.add(labelCustomerType1);

        comboBoxCustomerType.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        comboBoxCustomerType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casual", "Account holder" }));
        monthlyVehiclePanel.add(comboBoxCustomerType);

        labelJobType2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelJobType2.setText("Job Type:");
        monthlyVehiclePanel.add(labelJobType2);

        comboBoxJobTypeVehicle.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        comboBoxJobTypeVehicle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Overall", "MoT", "Service", "Repair" }));
        monthlyVehiclePanel.add(comboBoxJobTypeVehicle);

        jLayeredPane.add(monthlyVehiclePanel);
        monthlyVehiclePanel.setBounds(80, 90, 370, 80);

        add(jLayeredPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 520, 170));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewActionPerformed
        if(!(textFieldFrom.getText().equals("") && textFieldTill.getText().equals(""))){
            String fromDate = textFieldFrom.getText();
            String[] fromParts = fromDate.split("/");
            String fromDay = fromParts[0];
            String fromMonth = fromParts[1];
            String fromYear = fromParts[2];
            fromDate = "'"+fromYear+"-"+fromMonth+"-"+fromDay+"'";
            
            String toDate = textFieldTill.getText();
            String[] toParts = toDate.split("/");
            String toDay = toParts[0];
            String toMonth = toParts[1];
            String toYear = toParts[2];
            toDate = "'"+toYear+"-"+toMonth+"-"+toDay+"'";
            
            System.out.println(fromDate + ", " + toDate);
                        
            if (selected.equals("Monthly vehicle report")){
                String customerType = comboBoxCustomerType.getSelectedItem().toString();
                String jobType = comboBoxJobTypeVehicle.getSelectedItem().toString();
               
                try{
                    String sql = "";
                    if(jobType.equals("Overall")){
                        //all the jobs from casual customers
                        if (customerType.equals("Casual")){
                            sql = ("select * from job "
                                    + "where VehicleregistrationNumber in "
                                    + "(select registrationNumber from vehicle where Customername in "
                                    + "(select name from customer where name not in "
                                    + "(select Customername from customerAccount))) "
                                    + "and (dateBookedIn BETWEEN " + fromDate + " AND " + toDate + ")");
                        }else{ //all the jobs from account holders
                            sql = ("select * from job "
                                    + "where VehicleregistrationNumber in "
                                    + "(select registrationNumber from vehicle where Customername in "
                                    + "(select name from customer where name in "
                                    + "(select Customername from customerAccount))) "
                                    + "and (dateBookedIn BETWEEN " + fromDate + " AND " + toDate + ")");
                        }
                    }
                    else{
                        //all the jobs of this type from casual customers
                        if (customerType.equals("Casual")){
                            sql = ("select * from job "
                                    + "where VehicleregistrationNumber in "
                                    + "(select registrationNumber from vehicle where Customername in "
                                    + "(select name from customer where name not in "
                                    + "(select Customername from customerAccount))) "
                                    + "and (dateBookedIn BETWEEN " + fromDate + " AND " + toDate + ") "
                                    + "and type = '" + jobType + "'");
                        }else{ //all the jobs of this type from account holders
                            sql = ("select * from job "
                                    + "where VehicleregistrationNumber in "
                                    + "(select registrationNumber from vehicle where Customername in "
                                    + "(select name from customer where name in "
                                    + "(select Customername from customerAccount))) "
                                    + "and (dateBookedIn BETWEEN " + fromDate + " AND " + toDate + ") "
                                    + "and type = '" + jobType + "'");
                        }
                    }                    
                    PreparedStatement ps = null;
                    try {
                        ps = connection.prepareStatement(sql);
                    } 
                    catch (Exception e) {
                        e.printStackTrace();
                    }
                    rs = ps.executeQuery();
                }
                catch(SQLException e)
                {
                  System.err.println(e.getMessage());
                }
                
                textAreaReport.setText("");
                ArrayList<String> jobs = new ArrayList<>();
                
                try{
                    while (rs.next()){
                        String job = "JobID: " + rs.getString("jobID") + ", Vehicle: " + rs.getString("VehicleregistrationNumber");
                        textAreaReport.append(job+"\n");
                        jobs.add(job);
                    }
                    String text = textAreaReport.getText();
                    textAreaReport.setText("Booked in " + jobs.size() + " vehicles. Details: \n\n" + text);
                }catch(SQLException e){
                    System.err.println(e.getMessage());
                }
                
            }else if (selected.equals("Average job time and price")){
                String mechanic = comboBoxMechanic.getSelectedItem().toString();
                String jobType = comboBoxJobTypeJob.getSelectedItem().toString();
            }   
        }else{
            System.out.println("Pick the dates");
        }
    }//GEN-LAST:event_buttonViewActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        db.closeConnection(connection);
        System.exit(0);
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        JFrame f = (JFrame) this.getParent().getParent().getParent().getParent();
        f.dispose();
        db.closeConnection(connection);
        new MainMenu(username);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void comboBoxReportTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxReportTypeActionPerformed
        SetPanel();
    }//GEN-LAST:event_comboBoxReportTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JButton buttonView;
    private javax.swing.JComboBox<String> comboBoxCustomerType;
    private javax.swing.JComboBox<String> comboBoxJobTypeJob;
    private javax.swing.JComboBox<String> comboBoxJobTypeVehicle;
    private javax.swing.JComboBox<String> comboBoxMechanic;
    private javax.swing.JComboBox<String> comboBoxReportType;
    private javax.swing.JLayeredPane jLayeredPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jobTypePanel;
    private javax.swing.JLabel labelCustomerType;
    private javax.swing.JLabel labelCustomerType1;
    private javax.swing.JLabel labelFrom;
    private javax.swing.JLabel labelJobType1;
    private javax.swing.JLabel labelJobType2;
    private javax.swing.JLabel labelLoggedIn1;
    private javax.swing.JLabel labelPeriod;
    private javax.swing.JLabel labelReports;
    private javax.swing.JLabel labelSelectType;
    private javax.swing.JLabel labelTill;
    private javax.swing.JPanel monthlyVehiclePanel;
    private javax.swing.JTextArea textAreaReport;
    private javax.swing.JTextField textFieldFrom;
    private javax.swing.JTextField textFieldTill;
    private javax.swing.JTextField textFieldUserDetails;
    // End of variables declaration//GEN-END:variables
}
