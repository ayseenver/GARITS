/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teamproject.GUI;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;
import teamproject.Databases.DB_ImplClass;

/**
 *
 * @author ahmetsesli
 */
public class ReminderGUI extends javax.swing.JPanel {

    private String username;
    Statement statement;
    Connection connection = null;
    DB_ImplClass db = new DB_ImplClass();
    ResultSet rs;
    String[] reminderArray;

    /**
     * Creates new form NewJPanel
     */
    public ReminderGUI(String username) {
        this.username = username;
        initComponents();
        JFrame frame = new JFrame();
        frame.add(this);
        frame.pack();

        this.textFieldUserDetails.setText(username);
        connection = db.connect();
        statement = db.getStatement();

        ShowAllReminders();

        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private void ShowAllReminders() {
        //get all MoT reminders
        try {
            this.rs = statement.executeQuery("select * from VehicleReminder where type = 'MoT' and deleted = 0");
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

        ArrayList<String> reminders = new ArrayList<>();

        try {
            while (rs.next()) {
                // read the result set
                String reminder = "Type: " + rs.getString("type") + ", Vehicle: " + rs.getString("VehicleregistrationNumber") + ", "
                        + "Due: " + rs.getString("dueDate");
                reminders.add(reminder);
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

        reminders.add("\n");

        //get all service reminders
        try {
            this.rs = statement.executeQuery("select * from VehicleReminder where type = 'Service' and deleted = 0");
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

        try {
            while (rs.next()) {
                // read the result set
                String reminder = "Type: " + rs.getString("type") + ", Vehicle: " + rs.getString("VehicleregistrationNumber") + ", "
                        + "Due: " + rs.getString("dueDate");
                reminders.add(reminder);
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

        reminderArray = CreateArray(reminders);

        listReminders.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return reminderArray.length;
            }

            public String getElementAt(int i) {
                return reminderArray[i];
            }
        });
    }

    private String[] CreateArray(ArrayList<String> tasks) {
        String[] newArray = new String[tasks.size()];
        newArray = tasks.toArray(newArray);
        return newArray;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSearchReminders = new javax.swing.JButton();
        labelReminders = new javax.swing.JLabel();
        textFieldSearchReminders = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listReminders = new javax.swing.JList<>();
        buttonPrintAll = new javax.swing.JButton();
        buttonPrint = new javax.swing.JButton();
        buttonPrintType = new javax.swing.JButton();
        buttonDismiss = new javax.swing.JButton();
        comboBoxType = new javax.swing.JComboBox<>();
        labelDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescription = new javax.swing.JTextArea();
        labelType = new javax.swing.JLabel();
        textFieldUserDetails = new javax.swing.JTextField();
        labelLoggedIn = new javax.swing.JLabel();
        buttonExit = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        buttonView = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1280, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonSearchReminders.setText("Search");
        buttonSearchReminders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchRemindersActionPerformed(evt);
            }
        });
        add(buttonSearchReminders, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, -1, -1));

        labelReminders.setFont(new java.awt.Font("Lucida Grande", 1, 72)); // NOI18N
        labelReminders.setText("Reminders");
        add(labelReminders, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        textFieldSearchReminders.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        add(textFieldSearchReminders, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 227, 30));

        listReminders.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(listReminders);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 500, 350));

        buttonPrintAll.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonPrintAll.setText("Print All");
        buttonPrintAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintAllActionPerformed(evt);
            }
        });
        add(buttonPrintAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, -1, -1));

        buttonPrint.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonPrint.setText("Print");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });
        add(buttonPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 550, -1, -1));

        buttonPrintType.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonPrintType.setText("Print Selected Type ");
        buttonPrintType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintTypeActionPerformed(evt);
            }
        });
        add(buttonPrintType, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 550, -1, -1));

        buttonDismiss.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonDismiss.setText("Dismiss");
        buttonDismiss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDismissActionPerformed(evt);
            }
        });
        add(buttonDismiss, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 550, -1, -1));

        comboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboBoxType, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 550, -1, -1));

        labelDescription.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelDescription.setText("Description:");
        add(labelDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, -1, -1));

        textAreaDescription.setColumns(20);
        textAreaDescription.setRows(5);
        jScrollPane1.setViewportView(textAreaDescription);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 200, 630, 350));

        labelType.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelType.setText("Type:");
        add(labelType, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 550, -1, -1));
        add(textFieldUserDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 220, 30));

        labelLoggedIn.setText("Logged In as:");
        add(labelLoggedIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, -1, -1));

        buttonExit.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });
        add(buttonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 0, -1, -1));

        buttonBack.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));

        buttonView.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        buttonView.setText("View");
        buttonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewActionPerformed(evt);
            }
        });
        add(buttonView, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 550, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSearchRemindersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchRemindersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSearchRemindersActionPerformed

    private void buttonPrintAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPrintAllActionPerformed

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void buttonPrintTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPrintTypeActionPerformed

    private void buttonDismissActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDismissActionPerformed
        String selected = listReminders.getSelectedValue();
        String[] parts = selected.split(", ");

        String[] typeParts = parts[0].split(": ");
        String type = typeParts[1];

        String[] vehicleParts = parts[1].split(": ");
        String vehicle = vehicleParts[1];

        String[] dateParts = parts[2].split(": ");
        String date = dateParts[1];
        
        String sql;
        try {
            sql = ("update vehicleReminder "
                    + "set deleted = 1 "
                    + "where type = '" + type + "' and "
                    + "vehicleregistrationNumber = '" + vehicle + "' and "
                    + "dueDate = '" + date + "'");
            PreparedStatement ps = null;
            try {
                ps = connection.prepareStatement(sql);
            } catch (Exception e) {
                e.printStackTrace();
            }
            ps.executeUpdate();
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
        
        ShowAllReminders();
    }//GEN-LAST:event_buttonDismissActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        JFrame f = (JFrame) this.getParent().getParent().getParent().getParent();
        f.dispose();
        db.closeConnection(connection);
        new MainMenu(username);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonViewActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        db.closeConnection(connection);
        System.exit(0);
    }//GEN-LAST:event_buttonExitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonDismiss;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JButton buttonPrintAll;
    private javax.swing.JButton buttonPrintType;
    private javax.swing.JButton buttonSearchReminders;
    private javax.swing.JButton buttonView;
    private javax.swing.JComboBox<String> comboBoxType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelLoggedIn;
    private javax.swing.JLabel labelReminders;
    private javax.swing.JLabel labelType;
    private javax.swing.JList<String> listReminders;
    private javax.swing.JTextArea textAreaDescription;
    private javax.swing.JTextField textFieldSearchReminders;
    private javax.swing.JTextField textFieldUserDetails;
    // End of variables declaration//GEN-END:variables
}
